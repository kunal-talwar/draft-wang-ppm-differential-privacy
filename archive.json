{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2023-09-26T00:52:38.134611+00:00",
  "repo": "wangshan/draft-wang-ppm-differential-privacy",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 6,
      "id": "I_kwDOJ7sZWc5rz0LL",
      "title": "Specify motivations/limitations to use different DP guarantees",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/6",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "We should better specify why one will choose to use one DP guarantee over another (e.g. tighter privacy bound) or any limitation of using a DP guarantee (some DP mechanisms are limited to certain guarantees).",
      "createdAt": "2023-07-17T22:51:03Z",
      "updatedAt": "2023-07-17T22:51:03Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 7,
      "id": "I_kwDOJ7sZWc5rz0z9",
      "title": "Which DP definition is \"best\", and do _we_ really care about composability?",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/7",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Composability of multiple DP mechanisms into a new DP mechanism is often touted as a \"killer\" feature of DP. (As it is here.) While I think I understand why this is from an academic's perspective, I'm wondering if the IETF/IRTF audiences will actually care about this, and whether it's worth mentioning this at all.\r\n\r\nConcretely: how will composition theorems cited in the current draft be used in an analysis of DAP or in the design of a DP mechanism?",
      "createdAt": "2023-07-17T22:54:20Z",
      "updatedAt": "2023-07-18T02:57:01Z",
      "closedAt": "2023-07-18T02:57:01Z",
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Attempting to answer my own question here :)\r\n\r\nIs a DP policy meant to be a composition of DP mechanisms?",
          "createdAt": "2023-07-18T02:36:08Z",
          "updatedAt": "2023-07-18T02:36:08Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "The answer is yes!",
          "createdAt": "2023-07-18T02:57:01Z",
          "updatedAt": "2023-07-18T02:57:01Z"
        }
      ]
    },
    {
      "number": 8,
      "id": "I_kwDOJ7sZWc5r01m5",
      "title": "Changes for DAP/VDAF",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/8",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "This is a tracking issue for changes that will be needed for the DAP and VDAF drafts in order to accommodate the recommendations here.",
      "createdAt": "2023-07-18T03:31:15Z",
      "updatedAt": "2023-07-18T03:31:15Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 10,
      "id": "I_kwDOJ7sZWc5r63xP",
      "title": "Specify algorithms (DiscreteLaplace, DiscreteGaussian, Randomized Response) in {{CKS20}}",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/10",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Related to this comment: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/9#discussion_r1267190967",
      "createdAt": "2023-07-18T19:33:01Z",
      "updatedAt": "2023-07-20T17:58:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 12,
      "id": "I_kwDOJ7sZWc5sJ-ef",
      "title": "Optimization for DAP - when DP guarantee is satisfied but min batch size is not met",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/12",
      "state": "OPEN",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "If the DP guarantee composed by both Client-DP and Aggregator-DP accomplishes the target guarantee, it's possible that a batch can be outputted with enough DP guarantee, but may not satisfy min batch size after a DAP task has expired. Population size can be hard to estimate in practice, so this optimization can allow DAP to output aggregates without sacrificing privacy in terms of DP.",
      "createdAt": "2023-07-20T18:16:33Z",
      "updatedAt": "2023-07-20T18:16:33Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 13,
      "id": "I_kwDOJ7sZWc5sKQIU",
      "title": "User-level DP and other notions of DP that are not DAP-friendly",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/13",
      "state": "OPEN",
      "author": "tholop",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Keeping track of something we discussed with @cjpatton: some notions of DP are not achievable with DAP, at least in the current form of the protocol. For instance:\r\n- User-level DP seems hard to enforce if a given user can contribute from multiple devices or across multiple batches. In some cases we can ask users to bound their own contributions and achieve something similar to group privacy, but this might not always doable (e.g. if a user owns two devices that send measurements automatically without keeping track of the global number of measurements). Here is one reference about contribution bounding for user-level DP: https://arxiv.org/pdf/1909.01917.pdf (in the more general context of DP SQL).\r\n- Deletion-DP is not compatible with the current DAP specification that releases the number of measurements in a batch. Some mitigations have been discussed, e.g. by adding dummy reports (I can't find the relevant Github discussion anymore, but here is a comment from the spec: https://github.com/ietf-wg-ppm/draft-ietf-ppm-dap/blob/8fe9e265ea08a14a8aa1aab1d7dcf05498430b15/draft-ietf-ppm-dap.md?plain=1#L2677). Substitution-DP doesn't have this problem. \r\n- More generally, DAP Aggregators have access to some metadata that can pose problems, such as timestamps or Client IPs. Releasing the min/max timestamp of a batch to the Collector is problematic even if Aggregators are honest (unless we use a DP mechanism such as [Report Noisy Max](https://privacytools.seas.harvard.edu/files/privacytools/files/the_algorithmic_foundations_of_differential_privacy_0.pdf) to make this timestamp DP).",
      "createdAt": "2023-07-20T19:00:09Z",
      "updatedAt": "2023-07-21T16:08:16Z",
      "closedAt": null,
      "comments": [
        {
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "body": "For the first problem some client side bound could help, for example the proposal of using rate limiting PAT: https://github.com/cpriebe/draft-priebe-ppm-dap-reportauth. But it is indeed to hard to limit same user data form multiple devices.\r\nClientIPs and timestamps can be mitigated by a anonymous proxy like OHTTP, in DAP there is also a time precision field in task config to avoid revealing exact timestamp.",
          "createdAt": "2023-07-21T16:08:16Z",
          "updatedAt": "2023-07-21T16:08:16Z"
        }
      ]
    },
    {
      "number": 15,
      "id": "I_kwDOJ7sZWc5sLUp4",
      "title": "Aggregators adding DP noise requires structural deviation from DAP",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/15",
      "state": "OPEN",
      "author": "tanyav2",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "DAP property 1: Collector can be run by the same entity as an Aggregator\r\nDAP property 2: Either aggregator is allowed to be malicious\r\n\r\nOne proposal is to add DP noise to the aggregators. The implication for the threat model then is that collector is an adversary we are defending against. Otherwise, just add noise to collector, no reason to add to aggregators, and it's more efficient that way.\r\n\r\nNow consider Agg1 and Collector are run by same entity. Let's assume the independent Agg2 is malicious and chooses for instance, not to add any noise. Even if Agg1 honestly adds noise, this is visible to the Collector, who can simply remove it. So this proposition forces Agg2 to be honest, which violates DAP property 2, as only Agg1 is allowed to be malicious. \r\n\r\nThis could be fine, but now it needs to be specified that if DP noise guarantees are to be met, there needs to be structural deviation from DAP in terms of who is allowed to be malicious.",
      "createdAt": "2023-07-20T22:53:43Z",
      "updatedAt": "2023-07-21T16:12:28Z",
      "closedAt": null,
      "comments": [
        {
          "author": "tholop",
          "authorAssociation": "NONE",
          "body": "That's a good point. It's really worth clarifying what are the precise DP guarantees. At the moment, @cjpatton and I are working on something along the lines of \"the view of an adversary that controls the Collector, at most one Aggregator, and any number of Clients is (computationally) DP with respect to the input of honest Clients\".\r\n\r\n> Now consider Agg1 and Collector are run by same entity. Let's assume the independent Agg2 is malicious and chooses for instance, not to add any noise. Even if Agg1 honestly adds noise, this is visible to the Collector, who can simply remove it.\r\n\r\nIf Agg2 is malicious, then Agg1 must be honest. Since Agg1 and Collector are run by the same entity, then Collector is honest too. If Collector is honest, why would they remove the noise? \r\n\r\nEdit: That being said, it might be desirable to provide DP against honest parties too (like the Collector in your example). And indeed, that sounds like a structural deviation from DAP. I don't know how practical that would be.",
          "createdAt": "2023-07-21T00:11:41Z",
          "updatedAt": "2023-07-21T00:14:28Z"
        },
        {
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "body": "I think if Collector removes the noise from its co-locating agg1, then it\u2019s the same as agg1 being dishonest? That breaks the prerequisite of DAP if agg2 is also malicious.",
          "createdAt": "2023-07-21T16:12:28Z",
          "updatedAt": "2023-07-21T16:12:28Z"
        }
      ]
    },
    {
      "number": 18,
      "id": "I_kwDOJ7sZWc5xktfg",
      "title": "Use a unicode character for greek letters (e.g., \u0511 instead of `EPSILON`)",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/18",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "              Did you know that you can do this now:\r\n\r\n```suggestion\r\nLet `exp(\u03b5)` denote raising the numeric constant `e` to the power of\r\n```\r\n\r\nOf course, whether you want to or not is something you will need to decide.\r\n\r\n_Originally posted by @martinthomson in https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329403113_\r\n            ",
      "createdAt": "2023-09-20T17:37:36Z",
      "updatedAt": "2023-09-20T17:37:36Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOJ7sZWc5Vklra",
      "title": "Add the first skeleton",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/1",
      "state": "MERGED",
      "author": "wangshan",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-15T02:50:08Z",
      "updatedAt": "2023-07-15T02:59:30Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "bea996ecd05945e769bc255138af2d7f5f30863f",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "skeleton",
      "headRefOid": "2f8973f6e89f27f4c46b9dd0451522dff0124469",
      "closedAt": "2023-07-15T02:59:30Z",
      "mergedAt": "2023-07-15T02:59:30Z",
      "mergedBy": "wangshan",
      "mergeCommit": {
        "oid": "8dbd77bf25dcf7183c530ea1d5ba4a5d9fcac7bd"
      },
      "comments": [],
      "reviews": []
    },
    {
      "number": 2,
      "id": "PR_kwDOJ7sZWc5VnAzp",
      "title": "Paper citations that we will need",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/2",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-07-16T14:42:41Z",
      "updatedAt": "2023-07-17T16:00:43Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "8dbd77bf25dcf7183c530ea1d5ba4a5d9fcac7bd",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/paper-citations",
      "headRefOid": "3a3b4f659712f43779e278d018d1e7a804202bc9",
      "closedAt": "2023-07-17T16:00:42Z",
      "mergedAt": "2023-07-17T16:00:42Z",
      "mergedBy": "wangshan",
      "mergeCommit": {
        "oid": "dc9c4f0449b019ff2ac73db9f55fd898ce7a9790"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bYdqg",
          "commit": {
            "abbreviatedOid": "3a3b4f6"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "LGTN",
          "createdAt": "2023-07-17T16:00:20Z",
          "updatedAt": "2023-07-17T16:00:20Z",
          "comments": []
        }
      ]
    },
    {
      "number": 3,
      "id": "PR_kwDOJ7sZWc5VnA32",
      "title": "Define possible DP guarantees, and their respective composition theor\u2026",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/3",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026ems for DP budgeting\r\n\r\nReviewer Note: stacked PR on #2 ",
      "createdAt": "2023-07-16T14:43:50Z",
      "updatedAt": "2023-07-20T20:22:28Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "junyec/paper-citations",
      "baseRefOid": "3a3b4f659712f43779e278d018d1e7a804202bc9",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-budget",
      "headRefOid": "c825bab259d4a3c21ca5aecb0e29b5edb45c558f",
      "closedAt": "2023-07-17T22:43:22Z",
      "mergedAt": "2023-07-17T22:43:22Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "a3ce8c72bd6c09aceda1687e8a89d29220c2150f"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.\r\n\r\nI tried to provide some intuitions for each DP guarantees. Let me know if this is better.",
          "createdAt": "2023-07-17T22:10:54Z",
          "updatedAt": "2023-07-17T22:10:54Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "> > In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.\r\n> \r\n> I tried to provide some intuitions for each DP guarantees. Let me know if this is better.\r\n\r\nMuch better, but what I want us to be able to do is answer the following question: Why would one choose some notion of DP over another? Are there certain restrictions/requirements that prevent us from obtaining one but not anohter?",
          "createdAt": "2023-07-17T22:23:42Z",
          "updatedAt": "2023-07-17T22:23:42Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Oops :( my bad I forgot to check the base before merging.",
          "createdAt": "2023-07-17T22:45:04Z",
          "updatedAt": "2023-07-17T22:45:04Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Merged into main.",
          "createdAt": "2023-07-17T22:46:06Z",
          "updatedAt": "2023-07-17T22:46:06Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Thanks! I rebased to main, but also forgot to change the target branch.",
          "createdAt": "2023-07-17T22:48:49Z",
          "updatedAt": "2023-07-17T22:48:49Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> but what I want us to be able to do is answer the following question: Why would one choose some notion of DP over another? Are there certain restrictions/requirements that prevent us from obtaining one but not anohter?\r\n\r\nGood point, we can do better. I filed #6 to track this ",
          "createdAt": "2023-07-17T22:52:05Z",
          "updatedAt": "2023-07-17T22:52:05Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bYwDq",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:38:59Z",
          "updatedAt": "2023-07-17T16:38:59Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Unfortunately unicode characters are not supported by IETF's tooling: https://wangshan.github.io/draft-wang-ppm-differential-privacy/junyec/dp-budget/draft-wang-ppm-differential-privacy.html#name-pure-1013-dp-or-1013948-app",
              "createdAt": "2023-07-17T16:38:59Z",
              "updatedAt": "2023-07-17T16:38:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYwQJ",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:39:17Z",
          "updatedAt": "2023-07-17T16:39:17Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "I'd suggest names like `EPSILON` and `DELTA`.",
              "createdAt": "2023-07-17T16:39:17Z",
              "updatedAt": "2023-07-17T16:39:17Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYySG",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:43:03Z",
          "updatedAt": "2023-07-17T16:43:04Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "In my opinion this is too long of an authors list to be useful as a reference. I'd suggest truncating to the top three or four authors (and make sure to be consistent throughout the doc.)",
              "createdAt": "2023-07-17T16:43:03Z",
              "updatedAt": "2023-07-17T16:43:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bYygB",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T16:43:27Z",
          "updatedAt": "2023-07-17T16:43:28Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "E.g., {{MJTBp22}}, where \"p\" stands for \"plus\"",
              "createdAt": "2023-07-17T16:43:27Z",
              "updatedAt": "2023-07-17T16:43:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZDr7",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "LG,\r\n\r\nOne thing we can discuss later: is budget a MUST for client or SHOULD , if it\u2019s a must then do we need to spell out exactly how it\u2019s done?",
          "createdAt": "2023-07-17T17:17:32Z",
          "updatedAt": "2023-07-17T17:18:53Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZQ-T",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "In addition to pointing to formal definitions of DP notions, we should provide informal definitions that help develop the reader's intuition.",
          "createdAt": "2023-07-17T17:46:05Z",
          "updatedAt": "2023-07-17T17:49:03Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Can we reframe this in the DAP context? \"Federated machine learning applications require multiple aggregates to be computed over the same underlying data.\"",
              "createdAt": "2023-07-17T17:46:05Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            },
            {
              "originalPosition": 24,
              "body": "I don't think a normative \"MUST\" isn't appropriate here since we're not talking about a concrete enforcement mechanism yet. I would just write \"must\".",
              "createdAt": "2023-07-17T17:47:26Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            },
            {
              "originalPosition": 41,
              "body": "Wrap lines at 80 characters",
              "createdAt": "2023-07-17T17:47:50Z",
              "updatedAt": "2023-07-17T17:49:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba4z4",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:12Z",
          "updatedAt": "2023-07-17T22:09:12Z",
          "comments": [
            {
              "originalPosition": 35,
              "body": "Fixed all the unicode characters.",
              "createdAt": "2023-07-17T22:09:12Z",
              "updatedAt": "2023-07-17T22:09:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba42E",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:22Z",
          "updatedAt": "2023-07-17T22:09:22Z",
          "comments": [
            {
              "originalPosition": 15,
              "body": "Done.",
              "createdAt": "2023-07-17T22:09:22Z",
              "updatedAt": "2023-07-17T22:09:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba48W",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:09:51Z",
          "updatedAt": "2023-07-17T22:09:51Z",
          "comments": [
            {
              "originalPosition": 13,
              "body": "Rephrased it, and added \"with different machine learning model parameters\".",
              "createdAt": "2023-07-17T22:09:51Z",
              "updatedAt": "2023-07-17T22:09:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba5CU",
          "commit": {
            "abbreviatedOid": "641eb5b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T22:10:21Z",
          "updatedAt": "2023-07-17T22:10:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This line is ok, but I changed a couple of other places that have more than 80 characters.",
              "createdAt": "2023-07-17T22:10:21Z",
              "updatedAt": "2023-07-17T22:10:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5ba8cY",
          "commit": {
            "abbreviatedOid": "c825bab"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-17T22:22:38Z",
          "updatedAt": "2023-07-17T22:22:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 4,
      "id": "PR_kwDOJ7sZWc5VnE_K",
      "title": "Describe DpMechanism interface - how noise mechanisms should generate noise",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4",
      "state": "MERGED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "- Note to reviewers: this is stacked PR on #2 .",
      "createdAt": "2023-07-16T15:54:14Z",
      "updatedAt": "2023-07-25T00:52:24Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-mechanism",
      "headRefOid": "48f20b01455a0253b3602801bfeb83815b4a8eab",
      "closedAt": "2023-07-20T23:15:42Z",
      "mergedAt": "2023-07-20T23:15:42Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "14d8b5f331b926c36ebdb5da723bf33526033790"
      },
      "comments": [
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Reviewers, I try to take into account of suggestions from both of you, following changes are proposed:\r\n\r\n- I moved the previous `DpMechanism` interface into `DpPrimitive`, I think those interfaces make sense for DP primitives, i.e. they don't know about measurement vs aggregate share. I have some initial texts for DP primitives and their functionalities, but haven't described a concrete example.\r\n- I proposed `ClientDpMechanism` and `AggregatorDpMechanism`. I think `DpPrimitive.add_noise` itself won't always work for both measurement and aggregate share, which could be of different types. It's also more error proof when one tries to instantiate it, related to the discussion in [this comment](https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1266142207).\r\n- I described the RR Client-DP and Aggregator-DP mechanisms in details. Let me know if it's informative.\r\n\r\nI force pushed by accident during rebasing, but I think the new version of PR is quite different from the previous one. Let me know of additional feedbacks.",
          "createdAt": "2023-07-19T16:32:20Z",
          "updatedAt": "2023-07-19T16:32:20Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "squashed, going to merge.",
          "createdAt": "2023-07-20T23:14:44Z",
          "updatedAt": "2023-07-20T23:14:44Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bZHUq",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T17:23:54Z",
          "updatedAt": "2023-07-17T17:23:54Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Noise mechanisms and DP mechanisms are mixed, we should stick to one of them, I\u2019d vote for DP mechanisms ",
              "createdAt": "2023-07-17T17:23:54Z",
              "updatedAt": "2023-07-17T17:23:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bZIv4",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-17T17:26:29Z",
          "updatedAt": "2023-07-17T17:26:30Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Avoid mentioning local randomizer unless we are gonna explain it",
              "createdAt": "2023-07-17T17:26:29Z",
              "updatedAt": "2023-07-17T17:26:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bbyoh",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T02:33:54Z",
          "updatedAt": "2023-07-18T03:17:11Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "How about \r\n```suggestion\r\n    def remove_noise_from_result(self,\r\n```",
              "createdAt": "2023-07-18T02:33:54Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 50,
              "body": "IIUC this would be called by add_noise, i.e., is more of a DP primitive than a DP mechanism. Can we rename it?",
              "createdAt": "2023-07-18T03:13:53Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 46,
              "body": "Add noise into what, the measurement or the aggregate share? How do we know when to call this?\r\n\r\nI think it would be worth splitting this class into `ClientDpMechanism` and `AggregatorDpMechanism`.",
              "createdAt": "2023-07-18T03:14:59Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            },
            {
              "originalPosition": 32,
              "body": "Is this needed at this level of abstraction? IIUC sample_noise would be called by an implementation of add_noise and so seems like an implementation detail here.\r\n\r\n",
              "createdAt": "2023-07-18T03:16:26Z",
              "updatedAt": "2023-07-18T03:17:11Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biR5N",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T18:57:41Z",
          "updatedAt": "2023-07-18T18:57:41Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "The set of local DP noises we have in mind don't remove noise completely, e.g. see Algorithm 2 and Algorithm 4 in [{{MJTBp22}}](https://arxiv.org/abs/2004.00010), the aggregate result will still have noise, with some standard deviation. I think `debias` is a better term because it is \"removing\" the positive bias added in the local DP.",
              "createdAt": "2023-07-18T18:57:41Z",
              "updatedAt": "2023-07-18T18:57:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biSqt",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:00:01Z",
          "updatedAt": "2023-07-18T19:00:01Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "I think this gives caller flexibility to encode the returned noise differently, e.g. when sampling noise in the VDAF setting, one will sample the noise with this method, and then encode it to into field elements. To take DiscreteGaussian as an example, the returned data is an array of signed integers, and there is another step that converts the negative values to the back end of field modulus (e.g. -1 to `q-1`, where `q` is field modulus).",
              "createdAt": "2023-07-18T19:00:01Z",
              "updatedAt": "2023-07-18T19:00:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biTV_",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:02:03Z",
          "updatedAt": "2023-07-18T19:02:04Z",
          "comments": [
            {
              "originalPosition": 32,
              "body": "I am trying to explain why `sample_noise` exists, related to the reason that I explained here: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1267188326",
              "createdAt": "2023-07-18T19:02:03Z",
              "updatedAt": "2023-07-18T19:02:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biUUN",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:05:02Z",
          "updatedAt": "2023-07-18T19:05:02Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "Currently I was going for both, adding noise into measurement or aggregate share, because the noise itself doesn't know about measurement or aggregate share. Assume we turn this PR into tackling primitives instead after #9 is merged, a noise primitive should just have the flexibility of adding noise to data directly, or sampling noise that allows caller to perform future operations on it.",
              "createdAt": "2023-07-18T19:05:02Z",
              "updatedAt": "2023-07-18T19:05:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biWQg",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:11:12Z",
          "updatedAt": "2023-07-18T19:11:12Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Ahh right, \"remove noise\" is not a good term. How about \"remove bias\"? The problem I'm trying to solve is that \"debias\" doesn't look like \"de-bias\" to me, it looks like \"deebee-ass\" :D",
              "createdAt": "2023-07-18T19:11:12Z",
              "updatedAt": "2023-07-18T19:11:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biZwR",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:18:32Z",
          "updatedAt": "2023-07-18T19:20:30Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "\r\n> Currently I was going for both, adding noise into measurement or aggregate share, because the noise itself doesn't know about measurement or aggregate share.\r\n\r\nI see. In my opinion these should be split into two different classes, as this results in the simplest, most misuse-resistant API surface. Consider an implementation that incorrectly uses a `DpMechanism` intended for Client-DP as a mechanism for Aggregator-DP: Could this result in the aggregate result not being DP, for some definition of DP? In particular, don't we have to tune the sensitivity differently in each case?\r\n\r\n> Assume we turn this PR into tackling primitives instead after #9 is merged, a noise primitive should just have the flexibility of adding noise to data directly, or sampling noise that allows caller to perform future operations on it.\r\n\r\nRemember, by \"primitive\" I mean low-level algorithms used to build DP mechanisms. I think this PR should focus on the interface for the latter (DP mechanisms).\r\n\r\n",
              "createdAt": "2023-07-18T19:18:32Z",
              "updatedAt": "2023-07-18T19:20:30Z"
            },
            {
              "originalPosition": 50,
              "body": "Think of discrete guassian as a primitive that we use to implement `add_noise_to_agg_share()` or `add_noise_to_measurement()`. We would invoke that primitive in both of these methods, then do any postprocessing that's needed to fit with the VDAF. Does that make sense?\r\n",
              "createdAt": "2023-07-18T19:20:20Z",
              "updatedAt": "2023-07-18T19:20:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bj3Gv",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T01:52:08Z",
          "updatedAt": "2023-07-19T01:52:09Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "The idea is adding noise to measurement and adding noise to aggregate share are fundamentally the same operation, having two classes is an implementation detail. We can also have generic add_noise function that applies to Measurement and AggShare types.",
              "createdAt": "2023-07-19T01:52:09Z",
              "updatedAt": "2023-07-19T01:52:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bj3qy",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T01:56:03Z",
          "updatedAt": "2023-07-19T01:56:04Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Debias has been used in referenced literatures so it should be clear to readers, remove_bias would do too but I don\u2019t know if we can avoid mentioning debias",
              "createdAt": "2023-07-19T01:56:03Z",
              "updatedAt": "2023-07-19T01:56:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpDL3",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:25:55Z",
          "updatedAt": "2023-07-19T16:25:55Z",
          "comments": [
            {
              "originalPosition": 63,
              "body": "Removed local randomizer, instead call it Client-DP.",
              "createdAt": "2023-07-19T16:25:55Z",
              "updatedAt": "2023-07-19T16:25:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpDWr",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:26:08Z",
          "updatedAt": "2023-07-19T16:26:08Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Changed all to DP mechanisms",
              "createdAt": "2023-07-19T16:26:08Z",
              "updatedAt": "2023-07-19T16:26:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpD0R",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:27:04Z",
          "updatedAt": "2023-07-19T16:27:04Z",
          "comments": [
            {
              "originalPosition": 57,
              "body": "Sticking with `debias` for now. We can always change it to `remove_bias` if others feel it is better as well.",
              "createdAt": "2023-07-19T16:27:04Z",
              "updatedAt": "2023-07-19T16:27:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bpGMT",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T16:33:08Z",
          "updatedAt": "2023-07-19T16:33:08Z",
          "comments": [
            {
              "originalPosition": 50,
              "body": "Sounds good, moved those logic into `DpMechanism`. `DpPrimitive`'s `sample_noise` will only deal with generating noise.",
              "createdAt": "2023-07-19T16:33:08Z",
              "updatedAt": "2023-07-19T16:33:08Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bq-su",
          "commit": {
            "abbreviatedOid": "c4cb469"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T20:45:23Z",
          "updatedAt": "2023-07-19T21:03:45Z",
          "comments": [
            {
              "originalPosition": 22,
              "body": "Matching terminology in the DAP/VDAF specs helps avoid ambiguity.\r\n\r\n```suggestion\r\n* Add noise to a piece of input data (i.e., a measurement or aggregate share). Some DP primitives apply noise based on\r\n```",
              "createdAt": "2023-07-19T20:45:23Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 27,
              "body": "```suggestion\r\n* Sample noise using one of the primitives in {{primitives}}.\r\n```",
              "createdAt": "2023-07-19T20:45:57Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 23,
              "body": "We should refer to our own spec instead of the appendix of a paper.",
              "createdAt": "2023-07-19T20:46:13Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 30,
              "body": "\"Client-DP noises\"? Do you mean mechanism?",
              "createdAt": "2023-07-19T20:46:45Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            },
            {
              "originalPosition": 46,
              "body": "The add_noise function that is common would be specified in {{primitives}}; in this section, we would say how the primitive is used in a particular Client-DP mechanism or Aggregator-DP mechanism.",
              "createdAt": "2023-07-19T20:48:03Z",
              "updatedAt": "2023-07-19T21:03:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brcVp",
          "commit": {
            "abbreviatedOid": "10ae249"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T22:09:40Z",
          "updatedAt": "2023-07-19T22:09:41Z",
          "comments": [
            {
              "originalPosition": 46,
              "body": "@junyechen1996 and I discussed offline and converged on the idea of a single, unified `DpMechanism` interface. It turns out that this is really the only viable choice, as there are mechanisms that involve both client and aggregator adding noise, but for which the client bits and aggreagtor bits aren't secure on their own. Thus they MUST be unified.",
              "createdAt": "2023-07-19T22:09:40Z",
              "updatedAt": "2023-07-19T22:09:41Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brv68",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T23:39:40Z",
          "updatedAt": "2023-07-19T23:42:34Z",
          "comments": [
            {
              "originalPosition": 27,
              "body": "Done.",
              "createdAt": "2023-07-19T23:39:40Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 120,
              "body": "@cjpatton I changed it back to `min_batch_size`, because I think `batch_size` might mean the actual batch size.",
              "createdAt": "2023-07-19T23:40:06Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 211,
              "body": "This is the tricky part about debiasing, when there is composition of Client-DP and Aggregator-DP.",
              "createdAt": "2023-07-19T23:40:47Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            },
            {
              "originalPosition": 233,
              "body": "We haven't fully specified discrete Gaussian primitive, so leaving it as an initialized parameter. But once we have something for discrete Gaussian, we can update both here and for randomized response.",
              "createdAt": "2023-07-19T23:42:32Z",
              "updatedAt": "2023-07-19T23:42:35Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bry77",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-19T23:53:55Z",
          "updatedAt": "2023-07-19T23:53:56Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "Let's use the terms \"client noise\" and \"aggregator noise\"; we don't want to conflate the \"process\" (adding noise) with the \"result\" (DP)",
              "createdAt": "2023-07-19T23:53:55Z",
              "updatedAt": "2023-07-19T23:53:56Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5br2m1",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-20T00:07:47Z",
          "updatedAt": "2023-07-20T00:08:45Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "nit: I think it's safe to assume that AggregateResult and DebiasedAggregateResult are always the same.",
              "createdAt": "2023-07-20T00:07:47Z",
              "updatedAt": "2023-07-20T00:08:45Z"
            },
            {
              "originalPosition": 233,
              "body": "SGTM. Just put a TODO here, and maybe link to the #10 .",
              "createdAt": "2023-07-20T00:08:21Z",
              "updatedAt": "2023-07-20T00:08:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsmj7",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:46:23Z",
          "updatedAt": "2023-07-20T04:46:24Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "One difference is when the aggregate result is [integer] and DebiasedAggregateResult is [float]",
              "createdAt": "2023-07-20T04:46:23Z",
              "updatedAt": "2023-07-20T04:46:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsm6j",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:48:22Z",
          "updatedAt": "2023-07-20T04:48:22Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "I don\u2019t think we should have maybe in the interface, the fact it\u2019s optional is something the implementation language should handle",
              "createdAt": "2023-07-20T04:48:22Z",
              "updatedAt": "2023-07-20T04:48:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bsnk0",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T04:52:03Z",
          "updatedAt": "2023-07-20T04:52:03Z",
          "comments": [
            {
              "originalPosition": 230,
              "body": "DebiasedAggregateResult = AggregateResult\r\nto make it more clean",
              "createdAt": "2023-07-20T04:52:03Z",
              "updatedAt": "2023-07-20T04:52:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgUd",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:54:46Z",
          "updatedAt": "2023-07-20T16:54:46Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Oh, OK! Couldn't the aggreagte result also be a float?",
              "createdAt": "2023-07-20T16:54:46Z",
              "updatedAt": "2023-07-20T16:54:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgZv",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:55:01Z",
          "updatedAt": "2023-07-20T16:55:02Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "SGTM.",
              "createdAt": "2023-07-20T16:55:02Z",
              "updatedAt": "2023-07-20T16:55:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxg0a",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:56:10Z",
          "updatedAt": "2023-07-20T16:56:10Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "(Adjusted in slides.)",
              "createdAt": "2023-07-20T16:56:10Z",
              "updatedAt": "2023-07-20T16:56:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxsfW",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T17:26:47Z",
          "updatedAt": "2023-07-20T17:41:39Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Currently `Prio3FixedPointBoundedL2VecSum` uses aggregate result as an array of float, so that could be the case. And there is nothing needed in debiasing.",
              "createdAt": "2023-07-20T17:26:47Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 108,
              "body": "Updated PR as well to `add_client_dp`, `add_aggregator_dp`, and `debias_aggregate_result`.",
              "createdAt": "2023-07-20T17:27:11Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 211,
              "body": "I didn't explicitly explain Client-DP and Aggregator-DP noise in this function's comments. Is there anything else that I missed?",
              "createdAt": "2023-07-20T17:28:56Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 230,
              "body": "Done.",
              "createdAt": "2023-07-20T17:29:02Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 233,
              "body": "Done.",
              "createdAt": "2023-07-20T17:37:38Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 22,
              "body": "Missed this one, but done.",
              "createdAt": "2023-07-20T17:38:30Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            },
            {
              "originalPosition": 30,
              "body": "Done.",
              "createdAt": "2023-07-20T17:38:38Z",
              "updatedAt": "2023-07-20T17:41:40Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxy4g",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T17:45:08Z",
          "updatedAt": "2023-07-20T17:45:08Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "@cjpatton Is it worth being explicit here (`debias_aggregate_result` vs `debias`), if the argument takes in an aggregate result? If you think it's good, then the slides need update. Otherwise, I can revert it.",
              "createdAt": "2023-07-20T17:45:08Z",
              "updatedAt": "2023-07-20T17:45:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNEJ",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:01:10Z",
          "updatedAt": "2023-07-20T22:01:10Z",
          "comments": [
            {
              "originalPosition": 168,
              "body": "Good catch, yes debias_aggregate_result is better IMO. Fixing the slides.",
              "createdAt": "2023-07-20T22:01:10Z",
              "updatedAt": "2023-07-20T22:01:10Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNIQ",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:01:27Z",
          "updatedAt": "2023-07-20T22:01:27Z",
          "comments": [
            {
              "originalPosition": 211,
              "body": "LGTM",
              "createdAt": "2023-07-20T22:01:27Z",
              "updatedAt": "2023-07-20T22:01:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNP0",
          "commit": {
            "abbreviatedOid": "c8433f2"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:02:00Z",
          "updatedAt": "2023-07-20T22:02:01Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I suggest having one type for now until we need the flexibility.",
              "createdAt": "2023-07-20T22:02:00Z",
              "updatedAt": "2023-07-20T22:02:01Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzWDQ",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:30:04Z",
          "updatedAt": "2023-07-20T22:30:04Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "I think `AggregateResult` is a term defined in VDAF draft. For `Prio3SumVec`, it is an array of unsigned integers. If RR is used, Collector needs to debias aggregate result, which will turn it from an array of unsigned integers to an array of floats. It seems like the distinction is needed here?",
              "createdAt": "2023-07-20T22:30:04Z",
              "updatedAt": "2023-07-20T22:30:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzXWp",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:32:44Z",
          "updatedAt": "2023-07-20T22:32:44Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Why should that be the case? If what we want is vector of sums, then we'd expect integers wouldn't we? Why convert them to floats?",
              "createdAt": "2023-07-20T22:32:44Z",
              "updatedAt": "2023-07-20T22:32:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzc7M",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:42:13Z",
          "updatedAt": "2023-07-20T22:42:13Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Because the arithmetic operations in debiasing results in floats, see Appendix A.2 in https://arxiv.org/pdf/2211.10082.pdf, and also could result in negative values. So for Prio3SumVec for example, aggregate result is an array of *unsigned* integers, debiased aggregate result needs to be at least an array of *signed* integers, or floats.",
              "createdAt": "2023-07-20T22:42:13Z",
              "updatedAt": "2023-07-20T22:42:13Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzgF_",
          "commit": {
            "abbreviatedOid": "56c039a"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:55:29Z",
          "updatedAt": "2023-07-20T22:56:58Z",
          "comments": [
            {
              "originalPosition": 132,
              "body": "@cjpatton Added `num_aggregators` parameter in this method, which is needed by `Prio3SumVecWithRandomizedResponse`.",
              "createdAt": "2023-07-20T22:55:29Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            },
            {
              "originalPosition": 167,
              "body": "Using `Vec` and `Unsigned` to be consistent with VDAF draft.",
              "createdAt": "2023-07-20T22:55:52Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            },
            {
              "originalPosition": 234,
              "body": "There is some small caveat about the aggregate result type for `Prio3Histogram` with discrete Gaussian, because discrete Gaussian can sample negative noise, so it's possible that aggregate result becomes negative. In the Field world, it is at the tail end of field modulus.",
              "createdAt": "2023-07-20T22:56:51Z",
              "updatedAt": "2023-07-20T22:56:59Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzhTu",
          "commit": {
            "abbreviatedOid": "8ae3030"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T23:01:53Z",
          "updatedAt": "2023-07-20T23:01:53Z",
          "comments": [
            {
              "originalPosition": 106,
              "body": "Ack. OK, let's kep it then",
              "createdAt": "2023-07-20T23:01:53Z",
              "updatedAt": "2023-07-20T23:01:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzhqK",
          "commit": {
            "abbreviatedOid": "48f20b0"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "I didn't manage a thorough review, but I think this is definitely good enough for now! \ud83d\udea2 ",
          "createdAt": "2023-07-20T23:03:51Z",
          "updatedAt": "2023-07-20T23:12:38Z",
          "comments": []
        }
      ]
    },
    {
      "number": 5,
      "id": "PR_kwDOJ7sZWc5VnFbn",
      "title": "Define DP policy - how Aggregators should enforce privacy guarantee b\u2026",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/5",
      "state": "CLOSED",
      "author": "junyechen1996",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "\u2026efore outputting aggregate share\r\n\r\n- Note to reviewers: this is a stacked PR on top of #2 and #4 .",
      "createdAt": "2023-07-16T16:01:36Z",
      "updatedAt": "2023-07-20T18:17:05Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "junyec/dp-mechanism",
      "baseRefOid": "c4cb46900c66a996182d7a1fc32721f903ec0009",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "junyec/dp-policy",
      "headRefOid": "41bb8610d26557152026d58a44c42c8bf72d1c52",
      "closedAt": "2023-07-20T18:17:05Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Will get to reviewing this today, at the moment I'm catching up.",
          "createdAt": "2023-07-17T17:51:58Z",
          "updatedAt": "2023-07-17T17:51:58Z"
        },
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "of course at this stage feel free to merge without my approval :) ",
          "createdAt": "2023-07-17T18:00:19Z",
          "updatedAt": "2023-07-17T18:00:19Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "> of course at this stage feel free to merge without my approval :)\r\n\r\nYes please feel free to leave reviews :)  I wasn't able to add you before, probably because you haven't accepted the invitation.",
          "createdAt": "2023-07-17T22:12:43Z",
          "updatedAt": "2023-07-17T22:12:43Z"
        },
        {
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "body": "Sounds good, filed https://github.com/wangshan/draft-wang-ppm-differential-privacy/issues/12 and closing this.",
          "createdAt": "2023-07-20T18:17:01Z",
          "updatedAt": "2023-07-20T18:17:01Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bZMrC",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-17T17:37:07Z",
          "updatedAt": "2023-07-17T17:37:07Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bb4Po",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I don't think the current abstraction (`DpPolicy`) is all that helpful: you define the method, but you don't actually implement it anywhere.\r\n\r\nProposal: I think what this section should do is describe how to compose an optional Client-DP mechanism with an optional Aggregator-DP mechanism in DAP. \r\n\r\nI like how you've laid out the different sections for Client behavior, Aggregator behavior, and Collector behavior. A DP policy might consist of a pair `Optional[ClientDpMechanism], Optional[AggregatorDpMechanism]` (see https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/4#discussion_r1266142207); in these sections we would say when we call each of the methods on `ClientDpMechanism` and `AggregatorDpMechanism`.",
          "createdAt": "2023-07-18T03:01:26Z",
          "updatedAt": "2023-07-18T03:26:46Z",
          "comments": [
            {
              "originalPosition": 54,
              "body": "How about \"Client-DP\" rather than \"Local-DP\"?\r\n\r\nWe started saying \"Aggregator-DP\" instead of \"Central-DP\" due to the taxonomy in https://petsymposium.org/popets/2023/popets-2023-0086.pdf. We would say \"Client-DP\" rather than \"Local-DP\" to be consistent. \r\n\r\nI guess I don't have a strong opinion about which set of terms to use, so long as we're consistent.",
              "createdAt": "2023-07-18T03:01:26Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 9,
              "body": "```suggestion\r\n  aggregation of Clients' measurements with local DP noise with pure-DP guarantee.\r\n```",
              "createdAt": "2023-07-18T03:02:43Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 12,
              "body": "Pointers to analysis is useful in security considerations, but at this point all we really care about is intuition for what we get. Is the primary motivation is to be able to aggregate a batch that is not yet \"full\"? Are there any other benefits?",
              "createdAt": "2023-07-18T03:10:57Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 57,
              "body": "This section must answer the question: Why is composing Client- and Aggregator-DP useful? ",
              "createdAt": "2023-07-18T03:12:45Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 59,
              "body": "```suggestion\r\nFor example, {{FMT20}} and {{FMT22}} rely on privacy amplification by aggregation\r\n```",
              "createdAt": "2023-07-18T03:17:51Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 59,
              "body": "What does \"privacy amplification\" mean?",
              "createdAt": "2023-07-18T03:18:05Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 65,
              "body": "You'll need to describe how and why this works at a high level.",
              "createdAt": "2023-07-18T03:19:19Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            },
            {
              "originalPosition": 75,
              "body": "This paragraph ends with a \":\", which is grammatically incorrect.",
              "createdAt": "2023-07-18T03:19:48Z",
              "updatedAt": "2023-07-18T03:26:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5brehZ",
          "commit": {
            "abbreviatedOid": "41bb861"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "After speaking to @junyechen1996 offline, it sounds to me that the intention of a \"DP policy\" is to enable collecting a batch before the batch bounds are satisfied (i.e., the `min_batch_size` is met) *as long as* the `DpMechanism` provides sufficient privacy. (In this case we sacrifice utility, but don't lose privacy.) This sounds like a reasonable optimization for DAP, but I'd like to suggest that we don't push for it in the initial draft, as it it's a harder sell than the main motivation for combining client and aggregator noise.\r\n\r\nI suggest we close this PR and file an issue describing the optimization. That way we remember to bring it back up in the future. WDYT @wangshan ?",
          "createdAt": "2023-07-19T22:21:01Z",
          "updatedAt": "2023-07-19T22:21:01Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOJ7sZWc5VvPyY",
      "title": "Add intro and revise the layout",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/9",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Summary of structural changes:\r\n\r\n* Rename {#primitives} to {#overview}. This section describes the \"DP landscape\" in the literature applicable to VDAF and what is achievable with(out) DAP. (These things aren't really \"primitives\": A \"primitive\" is more like an algorithm.)\r\n\r\n* Split {#dp mechanism} into {#primitives} (the \"nuts and bolts\" for building DP mechanisms, like Laplace and Gaussian) and {#mechanisms}, which specifies Client- and Aggregator-DP mechanisms.\r\n\r\n* Rename {#dp policy} to {#policy} and scope the section to DAP. This section now describes a particular composition of a Client-DP mechanism with an Aggregator-DP mechanism in DAP. (We call this pair of mechanisms a \"DP policy\".)\r\n\r\nA few other minor changes:\r\n\r\n* Update DAP/VDAF draft references to the latest\r\n\r\n* Add reference to {{Dwo06}} and cite it in the intro\r\n\r\n* Update title in README",
      "createdAt": "2023-07-18T04:03:43Z",
      "updatedAt": "2023-07-18T20:36:25Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c825bab259d4a3c21ca5aecb0e29b5edb45c558f",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/first-pass",
      "headRefOid": "6342768eefa921f4c3eabb0145b3c482e1fe50a6",
      "closedAt": "2023-07-18T20:36:25Z",
      "mergedAt": "2023-07-18T20:36:25Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "997e81493ffa9ab020fd4e79025ca6d80f0b8b51"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-07-18T20:33:18Z",
          "updatedAt": "2023-07-18T20:33:18Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bcLRi",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:04:27Z",
          "updatedAt": "2023-07-18T04:04:28Z",
          "comments": [
            {
              "originalPosition": 81,
              "body": "@junyechen1996 this is how I suggested we define \"DP policy\" in https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/5#pullrequestreview-1534034920.",
              "createdAt": "2023-07-18T04:04:27Z",
              "updatedAt": "2023-07-18T04:04:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bcLlT",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:06:25Z",
          "updatedAt": "2023-07-18T04:06:25Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Is this a good reference or would you guys prefer something else? I don't have a strong opinion here, I just picked this one because it originally formalized DP.",
              "createdAt": "2023-07-18T04:06:25Z",
              "updatedAt": "2023-07-18T04:06:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bcLvj",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T04:07:26Z",
          "updatedAt": "2023-07-18T04:07:27Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "@junyechen1996 what are examples of these?",
              "createdAt": "2023-07-18T04:07:26Z",
              "updatedAt": "2023-07-18T04:07:27Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bh4om",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "Makes sense to me. I think the current \"mechanism\" in this draft probably fits better under \"primitives\" after this PR. But I think using \"mechanism\" to talk about applicability of primitives on VDAFs makes sense. Would love @wangshan 's opinion as well.",
          "createdAt": "2023-07-18T17:47:58Z",
          "updatedAt": "2023-07-18T18:44:42Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "```suggestion\r\n{{!VDAF=I-D.draft-irtf-cfrg-vdaf-06}}, the core cryptographic component of DAP.\r\n```",
              "createdAt": "2023-07-18T17:47:58Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 53,
              "body": "I think either {{Dwo06}} or {{DMNS06}} is good.",
              "createdAt": "2023-07-18T17:50:26Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 72,
              "body": "Don't think we will add collector-DP for now, because Collector would have unsharded the aggregate shares, and it defeats the purpose of secure aggregation. We can leave it in TODO though.",
              "createdAt": "2023-07-18T17:53:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 118,
              "body": "I see your point. The current #4 probably fits under {{primitives}} better. It doesn't mean to be coupled with a specific VDAF yet. I can rebase once you merge this one.",
              "createdAt": "2023-07-18T18:23:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 111,
              "body": "```suggestion\r\n   reduce the veracity of the result. This document provides no guidance for\r\n```",
              "createdAt": "2023-07-18T18:24:23Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 108,
              "body": "```suggestion\r\n1. Apart from privacy, the primary consideration for choosing a DP policy and\r\n```",
              "createdAt": "2023-07-18T18:24:39Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 166,
              "body": "The earliest paper is probably the one from Google: https://arxiv.org/abs/1407.6981, we haven't cited that one here. [This paper](https://arxiv.org/abs/2211.10082) ({{MJTBp22}}) also talks about two instantiations, one for replacement-DP setting in Appendix A, and one for deletion-DP setting in Appendix C. ",
              "createdAt": "2023-07-18T18:31:14Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 158,
              "body": "For discrete Laplace and Gaussian, we can probably point people to [{{CKS20}}](https://arxiv.org/abs/2004.00010). Do we need to specify any PRG requirement for the sampler as well? e.g. how to derive seed, etc.",
              "createdAt": "2023-07-18T18:33:43Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 173,
              "body": "So in this part we would specify some interface the like `Vdaf.add_noise_to_agg_share` experimental API in libprio today?",
              "createdAt": "2023-07-18T18:38:08Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            },
            {
              "originalPosition": 174,
              "body": "This sentence is not finished?",
              "createdAt": "2023-07-18T18:40:40Z",
              "updatedAt": "2023-07-18T18:44:42Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biR9P",
          "commit": {
            "abbreviatedOid": "bcf01b8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T18:57:52Z",
          "updatedAt": "2023-07-18T19:08:51Z",
          "comments": [
            {
              "originalPosition": 53,
              "body": "Changed to {{DMNS06}} so that we don't have more references than we need.",
              "createdAt": "2023-07-18T18:57:52Z",
              "updatedAt": "2023-07-18T19:08:51Z"
            },
            {
              "originalPosition": 72,
              "body": "Right, it's maybe worth mentioning as a possibility, but of course we would like VDAF execution to be DP from the point of view of the Collector as well. The straw man might be useful, so I'll leave it.",
              "createdAt": "2023-07-18T18:58:59Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 118,
              "body": "I'm proposing to split the current {{dp mechanisms}} section: I'm thinking the `DpMechanism` interface would fit into `{{mechanism}}` and we'd fit the low-level algorithms for sampling things in {{primitives}}. Does that sound good?",
              "createdAt": "2023-07-18T19:00:17Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 158,
              "body": "I think so, but we could probably reuse the PRGs defined in the VDAF draft.\r\n\r\nThe purpose is to have a reference implementation of these algorithms so that we increase the likelihood of others developing secure implementations. (My understanding is that it's easy to mess up here in a way that invalidates DP.) If the algorithm spells out expanding a seed into a sample from the given distribution, then we can produce test vectors to help increase confidence.\r\n\r\nCould you file an issue for specifying algorithms {{CKS20}}? No reason to actually do the work between now and Monday, but it'll be good to have our work scoped out.\r\n\r\n@tholop may be able to help out here.",
              "createdAt": "2023-07-18T19:03:13Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 166,
              "body": "In your opinion, do any of these algorithms need to be specified? The primary motivation for standardizing Laplace/Gaussian is that there are lots of ways to get the implementation wrong.\r\n\r\nI'm familiar with RAPPOR and I'm not sure any algorithm there needs to be standardized.",
              "createdAt": "2023-07-18T19:06:28Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 173,
              "body": "That's right :) It would also specify the interface for Client-DP mechanisms.",
              "createdAt": "2023-07-18T19:07:00Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            },
            {
              "originalPosition": 174,
              "body": "Good catch, I forgot to finish this bit. I just deleted the second sentence and the paragraph below.",
              "createdAt": "2023-07-18T19:08:34Z",
              "updatedAt": "2023-07-18T19:08:52Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5biaB8",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:18:53Z",
          "updatedAt": "2023-07-18T19:18:53Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "I think it's worth spelling out discrete Gaussian and Laplace. Both are pretty popular options in Aggregator-DP setting.\r\n\r\nFor RAPPOR, I think having one as an example for Client-DP setting would be useful in the draft.",
              "createdAt": "2023-07-18T19:18:53Z",
              "updatedAt": "2023-07-18T19:18:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bijiS",
          "commit": {
            "abbreviatedOid": "6342768"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "LGTM. I will try to tweak #4 to follow the guidance after this PR. Also filed #10 .",
          "createdAt": "2023-07-18T19:33:24Z",
          "updatedAt": "2023-07-18T20:33:10Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bikQ8",
          "commit": {
            "abbreviatedOid": "1a8c9bc"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-18T19:35:48Z",
          "updatedAt": "2023-07-18T19:35:48Z",
          "comments": [
            {
              "originalPosition": 166,
              "body": "OK, SGTM!",
              "createdAt": "2023-07-18T19:35:48Z",
              "updatedAt": "2023-07-18T19:35:48Z"
            }
          ]
        }
      ]
    },
    {
      "number": 11,
      "id": "PR_kwDOJ7sZWc5V8PUJ",
      "title": "Rework intro and change \"DP policy\" section into \"DAP integration\"",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/11",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "It isn't possible to cleanly separate DP mechanisms into \"Client-DP\" mechanisms and \"Server-DP\" mechanisms. There are mechanisms for which both parties add noise, and the noise added by one party would not be sufficient for DP on its own.",
      "createdAt": "2023-07-19T23:06:14Z",
      "updatedAt": "2023-07-20T22:17:50Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "997e81493ffa9ab020fd4e79025ca6d80f0b8b51",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/rethink-dp-mechanism",
      "headRefOid": "02c5371fc3105a2afc11c5975f247679c87bf63b",
      "closedAt": "2023-07-20T22:17:50Z",
      "mergedAt": "2023-07-20T22:17:49Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5bshn8",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "Mostly look good, I have a comment about policy",
          "createdAt": "2023-07-20T04:15:27Z",
          "updatedAt": "2023-07-20T04:31:15Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "```suggestion\r\nFor some DP mechanisms, noise is added only by the Clients or only by the\r\n```",
              "createdAt": "2023-07-20T04:15:27Z",
              "updatedAt": "2023-07-20T04:31:15Z"
            },
            {
              "originalPosition": 41,
              "body": "I think there is still a concept of policy missing, a policy is implemented by DpMechanism but it may have concerns that\u2019s not covered by DpMechanism, for eg. A policy of DP amplification depends on batch size, if it\u2019s larger than min batch size, no noise needs to be added. I think this decision is the role of a policy type, which should be _used_ by DAP aggregators",
              "createdAt": "2023-07-20T04:30:14Z",
              "updatedAt": "2023-07-20T04:31:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxftZ",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:53:02Z",
          "updatedAt": "2023-07-20T16:53:02Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "This falls into the bucket of changes for DAP. I suggested to Junye that we avoid mentioning protocl changes for now and just carve out a section in the draft for them. I do plan to mention this optmization in the PPM meeting however.\r\n",
              "createdAt": "2023-07-20T16:53:02Z",
              "updatedAt": "2023-07-20T16:53:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bxgBH",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T16:53:53Z",
          "updatedAt": "2023-07-20T16:53:54Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Also, as discussed internally, we're going to merge this then rename \"primitive\" to \"mechanism\" and \"mechanism\" to \"policy\". Please plan on doing a full pass of the draft when you wake up and either file a PR to fix it up or drop comments somewhere :)",
              "createdAt": "2023-07-20T16:53:54Z",
              "updatedAt": "2023-07-20T16:53:54Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5byEwx",
          "commit": {
            "abbreviatedOid": "cde1e5d"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "I think it looks good, assuming we apply the new naming: mechanisms for all the randomized algorithm sampler (Laplace, Gaussian), and policies for VDAFs.",
          "createdAt": "2023-07-20T18:29:47Z",
          "updatedAt": "2023-07-20T18:29:47Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzMs-",
          "commit": {
            "abbreviatedOid": "bee3e6c"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T21:59:21Z",
          "updatedAt": "2023-07-20T21:59:21Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Done.",
              "createdAt": "2023-07-20T21:59:21Z",
              "updatedAt": "2023-07-20T21:59:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzNJy",
          "commit": {
            "abbreviatedOid": "13e01b9"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "Looks good, just some comments about typo.",
          "createdAt": "2023-07-20T22:01:34Z",
          "updatedAt": "2023-07-20T22:05:36Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "mechanisms -> policies? If we are talking about noise by multiple parties here.",
              "createdAt": "2023-07-20T22:01:34Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 38,
              "body": "```suggestion\r\n1. {{mechanisms}} specifies various mechanisms required for building DP\r\n```",
              "createdAt": "2023-07-20T22:02:26Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 46,
              "body": "```suggestion\r\n1. {{policies}} defines \"DP policies\", which are composed with VDAFs in order\r\n```",
              "createdAt": "2023-07-20T22:03:12Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 72,
              "body": "```suggestion\r\n1. The mechanisms described in {{mechanisms}} are intended for use beyond\r\n```",
              "createdAt": "2023-07-20T22:04:04Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 93,
              "body": "```suggestion\r\n# DP Mechanisms {#mechanisms}\r\n```",
              "createdAt": "2023-07-20T22:04:42Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            },
            {
              "originalPosition": 130,
              "body": "`\r\n```suggestion\r\n> TODO: Specify integration of a `DpPolicy` into DAP.\r\n```",
              "createdAt": "2023-07-20T22:05:13Z",
              "updatedAt": "2023-07-20T22:05:36Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5bzRsM",
          "commit": {
            "abbreviatedOid": "bdec722"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-07-20T22:13:27Z",
          "updatedAt": "2023-07-20T22:14:14Z",
          "comments": [
            {
              "originalPosition": 20,
              "body": "Good catch. I also added a definition of \"DP policy\" above.",
              "createdAt": "2023-07-20T22:13:27Z",
              "updatedAt": "2023-07-20T22:14:14Z"
            }
          ]
        }
      ]
    },
    {
      "number": 14,
      "id": "PR_kwDOJ7sZWc5WDPMx",
      "title": "Add Pierre Tholoniat as contributor",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/14",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "He helped shaped much of this work so far.",
      "createdAt": "2023-07-20T22:36:18Z",
      "updatedAt": "2023-08-03T03:05:37Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "c0d7bdb3fad79d39a7dc9f5027b5357725377842",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/ack-pierre",
      "headRefOid": "e7ac8bb41b67ff982b9caa05c31728192f77b85d",
      "closedAt": "2023-08-03T03:05:37Z",
      "mergedAt": "2023-08-03T03:05:37Z",
      "mergedBy": "junyechen1996",
      "mergeCommit": {
        "oid": "e91f3e16a210a8c3b2a42a01da0ef7fda17f81f9"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "cc/ @tholop\r\n\r\n",
          "createdAt": "2023-07-20T22:36:25Z",
          "updatedAt": "2023-07-20T22:36:37Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5b4Efp",
          "commit": {
            "abbreviatedOid": "e7ac8bb"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-07-21T15:59:07Z",
          "updatedAt": "2023-07-21T15:59:07Z",
          "comments": []
        }
      ]
    },
    {
      "number": 16,
      "id": "PR_kwDOJ7sZWc5annEw",
      "title": "Reorganize a bit and describe our trust models",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/16",
      "state": "CLOSED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Closes #15 by doing nothing. (COA security assumes the Collector doesn't share the aggregate result with the honest Aggregator.)",
      "createdAt": "2023-09-18T22:50:41Z",
      "updatedAt": "2023-09-18T23:27:31Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "6bfffda2f2961a058ae5270f6bd570610d216480",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/threat-model",
      "headRefOid": "dae729bc9d4d65df67c990ba95837333029e5da3",
      "closedAt": "2023-09-18T23:27:31Z",
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": []
    },
    {
      "number": 17,
      "id": "PR_kwDOJ7sZWc5anwBg",
      "title": "Describe DP goals and threat model",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17",
      "state": "MERGED",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Whoops, re-do of #16. I merged an intermediate commit, which seems to have confused GitHub.\r\n",
      "createdAt": "2023-09-18T23:28:20Z",
      "updatedAt": "2023-09-23T01:05:53Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "6bfffda2f2961a058ae5270f6bd570610d216480",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/threat-model",
      "headRefOid": "03220d61cf1d470138715eee04070d5818a5a16a",
      "closedAt": "2023-09-23T01:05:52Z",
      "mergedAt": "2023-09-23T01:05:52Z",
      "mergedBy": "cjpatton",
      "mergeCommit": {
        "oid": "8183bfa36913b04022251b6851af83553ed88013"
      },
      "comments": [
        {
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "body": "Squashed.",
          "createdAt": "2023-09-23T01:04:53Z",
          "updatedAt": "2023-09-23T01:04:53Z"
        }
      ],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5hSOfB",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-18T23:59:33Z",
          "updatedAt": "2023-09-19T00:02:21Z",
          "comments": [
            {
              "originalPosition": 23,
              "body": "veracity is not really relevant; usefulness might be\r\n\r\n```suggestion\r\nof noise; but adding too much noise can reduce the usefulness of the aggregate\r\n```",
              "createdAt": "2023-09-18T23:59:34Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 34,
              "body": "scare quotes?",
              "createdAt": "2023-09-18T23:59:47Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 36,
              "body": "```suggestion\r\nminimal loss in utility; but if the trust model includes the possibility that many Clients are corrupted by the attacker,\r\n```",
              "createdAt": "2023-09-19T00:00:20Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            },
            {
              "originalPosition": 69,
              "body": "Did you know that you can do this now:\r\n\r\n```suggestion\r\nLet `exp(\u03b5)` denote raising the numeric constant `e` to the power of\r\n```\r\n\r\nOf course, whether you want to or not is something you will need to decide.",
              "createdAt": "2023-09-19T00:01:21Z",
              "updatedAt": "2023-09-19T00:02:21Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSQpW",
          "commit": {
            "abbreviatedOid": "97b8d29"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:07:04Z",
          "updatedAt": "2023-09-19T00:07:05Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "What would the RFC editor make of this? It's massively preferable obviously, but I don't know if this would eventually get shot down.",
              "createdAt": "2023-09-19T00:07:05Z",
              "updatedAt": "2023-09-19T00:07:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSQsX",
          "commit": {
            "abbreviatedOid": "81c2b8f"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:07:25Z",
          "updatedAt": "2023-09-19T00:07:25Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "What do you mean by square quotes?",
              "createdAt": "2023-09-19T00:07:25Z",
              "updatedAt": "2023-09-19T00:07:25Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSREl",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:09:19Z",
          "updatedAt": "2023-09-19T00:09:20Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Well, they recently changed the tooling because the tooling was too strict.  This would be fine.",
              "createdAt": "2023-09-19T00:09:20Z",
              "updatedAt": "2023-09-19T00:09:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSRHu",
          "commit": {
            "abbreviatedOid": "81c2b8f"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:09:37Z",
          "updatedAt": "2023-09-19T00:09:38Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Simpler alternative suggested by Kunal. This doesn't account for the attack in #15, which is that one Aggregator \"maliciously\" doesn't add noise, causing its co-Aggregator to learn the non-noised aggregate result. I don't really know what to make of this \"attack\". I'd be fine ignoring it if folks think that splitting hairs here is distracting.\r\n\r\n```suggestion\r\n### OA: One-Aggregator\r\n\r\nAssume that at least one Aggregator is honest. The other Aggregator(s), the Collector, and most Clients are controlled by the attacker.\r\n```",
              "createdAt": "2023-09-19T00:09:37Z",
              "updatedAt": "2023-09-19T00:09:38Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSR5n",
          "commit": {
            "abbreviatedOid": "169bdf8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:12:09Z",
          "updatedAt": "2023-09-19T00:12:09Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Simpler alternative suggested by Kunal. This doesn't account for the attack in #15, which is that one Aggregator \"maliciously\" doesn't add noise, causing its co-Aggregator to learn the non-noised aggregate result. I don't really know what to make of this \"attack\". I'd be fine ignoring it if folks think that splitting hairs here is distracting.\r\n\r\n```suggestion\r\n### OA: One-Aggregator\r\n\r\nAssume that at least one Aggregator is honest. The other Aggregator(s), the Collector, and most Clients are controlled by the attacker.\r\n```",
              "createdAt": "2023-09-19T00:12:09Z",
              "updatedAt": "2023-09-19T00:12:09Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSVNy",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:20:02Z",
          "updatedAt": "2023-09-19T00:20:02Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "It looks like it only renders in \"art mode\": \r\n![image](https://github.com/wangshan/draft-wang-ppm-differential-privacy/assets/3453007/070f9a8e-7fa9-46dc-a505-1cbbed32f6f2)\r\n",
              "createdAt": "2023-09-19T00:20:02Z",
              "updatedAt": "2023-09-19T00:20:02Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSYWY",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:42:05Z",
          "updatedAt": "2023-09-19T00:42:05Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "srsly?  That's an xml2rfc bug if ever I saw one.  `&#120656;`= &#120656; works fine in browsers, so something is double-quoting the ampersand.",
              "createdAt": "2023-09-19T00:42:05Z",
              "updatedAt": "2023-09-19T00:42:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hSZQm",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "martinthomson",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T00:48:31Z",
          "updatedAt": "2023-09-19T00:48:32Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "FWIW, my local testing doesn't produce that bug.  I had no trouble getting an epsilon to show, either by pasting the character directly in the document source or by using an entity reference.",
              "createdAt": "2023-09-19T00:48:31Z",
              "updatedAt": "2023-09-19T00:48:32Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUbRw",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T08:48:50Z",
          "updatedAt": "2023-09-19T08:48:50Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "https://en.wikipedia.org/wiki/Scare_quotes\r\n\r\nThere seems to be no reason for quotes here.\r\nAnd there is an \"on\" missing: `The best choice of policy depends *on* one's trust model`",
              "createdAt": "2023-09-19T08:48:50Z",
              "updatedAt": "2023-09-19T09:05:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUjzo",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:03:47Z",
          "updatedAt": "2023-09-19T09:03:48Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "nit: \"at the cost of some utility\" because \"higher\" is weird here since the utility is getting lower.",
              "createdAt": "2023-09-19T09:03:47Z",
              "updatedAt": "2023-09-19T09:03:48Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUkbV",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:05:11Z",
          "updatedAt": "2023-09-19T09:05:11Z",
          "comments": [
            {
              "originalPosition": 45,
              "body": "nit: Just say \"trustmodels\" the distinction doesn't matter here",
              "createdAt": "2023-09-19T09:05:11Z",
              "updatedAt": "2023-09-19T09:05:12Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUniG",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:12:04Z",
          "updatedAt": "2023-09-19T09:12:04Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "R and S are mixed up. Above it says S is the algorithm and R the aggregate, now this changes.",
              "createdAt": "2023-09-19T09:12:04Z",
              "updatedAt": "2023-09-19T09:17:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUtFZ",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:24:16Z",
          "updatedAt": "2023-09-19T09:24:16Z",
          "comments": [
            {
              "originalPosition": 152,
              "body": "nit: It's better to drop the parentheses the explanation is totally justified here. And maybe pick something other than `S` because that was already used above. If it's not used further it could just be omitted.",
              "createdAt": "2023-09-19T09:24:16Z",
              "updatedAt": "2023-09-19T09:24:16Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hUxCu",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "simon-friedberger",
          "authorAssociation": "NONE",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T09:33:05Z",
          "updatedAt": "2023-09-19T09:33:05Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "I think `One-Aggregator` is strictly more powerful and aligns better with the fact that there is no requirement in DAP to keep aggregates secret.\r\n\r\nI agree with the statements in issue #15 that assuming one aggregator doesn't add noise and the other one removes their own noise is actually two malicious aggregators and violates assumptions.",
              "createdAt": "2023-09-19T09:33:05Z",
              "updatedAt": "2023-09-19T09:33:05Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hT6m5",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T07:37:44Z",
          "updatedAt": "2023-09-19T12:12:53Z",
          "comments": [
            {
              "originalPosition": 36,
              "body": "nit: wrap at 80 columns.",
              "createdAt": "2023-09-19T07:37:44Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 152,
              "body": "```suggestion\r\n`S` that itself is pure-DP (or, approximate-DP) as defined above. (`S` takes\r\n```",
              "createdAt": "2023-09-19T07:52:34Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 158,
              "body": "```suggestion\r\nbe trusted to execute the protocol correctly (i.e., which parties were not\r\n```",
              "createdAt": "2023-09-19T07:53:34Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 191,
              "body": "```suggestion\r\nadded by the Client may not be sufficient to protect the measurement. However\r\n```",
              "createdAt": "2023-09-19T07:56:28Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            },
            {
              "originalPosition": 113,
              "body": "```suggestion\r\nnon-negligible bound in order to achieve reasonable utility. See {{dp-explainer}}\r\n```",
              "createdAt": "2023-09-19T12:11:01Z",
              "updatedAt": "2023-09-19T12:12:53Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haTdX",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:19:46Z",
          "updatedAt": "2023-09-19T22:19:47Z",
          "comments": [
            {
              "originalPosition": 34,
              "body": "I'm using quotes to emphasize a term I'm defining. If this were latex, I'd use `\\emph{}`. Markdown italics can't be used in RFCs as far as I know.",
              "createdAt": "2023-09-19T22:19:47Z",
              "updatedAt": "2023-09-19T22:19:47Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haTlq",
          "commit": {
            "abbreviatedOid": "2e63432"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:20:26Z",
          "updatedAt": "2023-09-19T22:20:26Z",
          "comments": [
            {
              "originalPosition": 69,
              "body": "Ack, I'll do some research at some point. Possibly I have an old version.",
              "createdAt": "2023-09-19T22:20:26Z",
              "updatedAt": "2023-09-19T22:20:26Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haUzr",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:21:42Z",
          "updatedAt": "2023-09-19T22:21:43Z",
          "comments": [
            {
              "originalPosition": 37,
              "body": "Good catch, I meant \"decreased\" \ud83d\ude2c ",
              "createdAt": "2023-09-19T22:21:42Z",
              "updatedAt": "2023-09-19T22:21:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haVFd",
          "commit": {
            "abbreviatedOid": "0b75391"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:23:04Z",
          "updatedAt": "2023-09-19T22:23:04Z",
          "comments": [
            {
              "originalPosition": 96,
              "body": "Good catch. Previously I was using `R` for the algorithm and missed this one.",
              "createdAt": "2023-09-19T22:23:04Z",
              "updatedAt": "2023-09-19T22:23:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5haZuv",
          "commit": {
            "abbreviatedOid": "169bdf8"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:47:43Z",
          "updatedAt": "2023-09-19T22:47:43Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "Done. I left addressing issue #15 as a TODO: It's worth mentioning in Security Considerations at least.",
              "createdAt": "2023-09-19T22:47:43Z",
              "updatedAt": "2023-09-19T22:47:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5habXc",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-19T22:57:22Z",
          "updatedAt": "2023-09-19T22:57:22Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Correct me if I'm wrong: I believe the goal of this section is to provide an overview of DP, including definitions (done in this PR), trust models (done in this PR), utility (to be filled) etc. Should the title of this section be changed to something like \"Overview\" as well? And things like utility can be added as a subsection in the overview.",
              "createdAt": "2023-09-19T22:57:22Z",
              "updatedAt": "2023-09-19T22:57:22Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hhkci",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T17:38:44Z",
          "updatedAt": "2023-09-20T17:38:44Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I moved things around a bit. I guess we should have reviewed this first ... I took the liberty to just push to main. The old \"DP overview\" section is now in the Appendix.",
              "createdAt": "2023-09-20T17:38:44Z",
              "updatedAt": "2023-09-20T17:38:44Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hiOsQ",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T19:34:01Z",
          "updatedAt": "2023-09-20T19:56:57Z",
          "comments": [
            {
              "originalPosition": 155,
              "body": "This corresponds to the SIM-CDP definition (Def 4 from {{MPRV09}}). Other definitions exist, such as IND-CDP or SIM+-CDP, so it can be worth stating the exact definition being used once we have the formal CDP proof.",
              "createdAt": "2023-09-20T19:34:01Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            },
            {
              "originalPosition": 173,
              "body": "Should it be \"all Clients\" instead of \"most Clients\", since we only trust one Aggregator and nobody else?",
              "createdAt": "2023-09-20T19:38:31Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            },
            {
              "originalPosition": 90,
              "body": "Yes, {{DMNS06}} is defining Substitution + Pure DP in Def 1 (the \"databases\" have the same length). But with this definition, the *symmetric difference* between the multisets actually contains 2 elements, not one element.\r\n\r\nAnother reference that I often see to explain the difference between Substitution-DP and Addition-DP is this SIGMOD '11 paper: https://www.cse.psu.edu/~duk17/papers/nflprivacy.pdf. I think that they introduced the Bounded/Unbounded DP terminology, which is used by some papers.",
              "createdAt": "2023-09-20T19:56:04Z",
              "updatedAt": "2023-09-20T19:56:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjGgK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:25:27Z",
          "updatedAt": "2023-09-20T22:25:28Z",
          "comments": [
            {
              "originalPosition": 171,
              "body": "perhaps enough to just say Aggregator, without (s), as other parts of the PR does",
              "createdAt": "2023-09-20T22:25:27Z",
              "updatedAt": "2023-09-20T22:25:28Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjKlK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:47:27Z",
          "updatedAt": "2023-09-20T22:47:27Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "question: @cjpatton am I right the two trust model are type 1 and 2 from the googledoc. we don't consider the case where one aggregator and collector are honest? do we want to include this happy case?",
              "createdAt": "2023-09-20T22:47:27Z",
              "updatedAt": "2023-09-20T22:50:15Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjLSp",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:51:23Z",
          "updatedAt": "2023-09-20T22:51:23Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "I think we can bring back some section from old overview once we merge this. For e.g. local-DP should be explained before it's mentioned in Hedging",
              "createdAt": "2023-09-20T22:51:23Z",
              "updatedAt": "2023-09-20T22:51:23Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjL39",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T22:54:46Z",
          "updatedAt": "2023-09-20T22:59:03Z",
          "comments": [
            {
              "originalPosition": 90,
              "body": "Great catch! Added reference to the Appendix (and cleaned up the subsection).",
              "createdAt": "2023-09-20T22:54:46Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 155,
              "body": "Added this reference.",
              "createdAt": "2023-09-20T22:57:27Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 171,
              "body": "yes, good catch!",
              "createdAt": "2023-09-20T22:57:55Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            },
            {
              "originalPosition": 173,
              "body": "@wangshan pointed out that we're considering at least one honest Client, since otherwise privacy is completely meaningless :D ",
              "createdAt": "2023-09-20T22:58:36Z",
              "updatedAt": "2023-09-20T22:59:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNFK",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:02:02Z",
          "updatedAt": "2023-09-20T23:02:03Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "See https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329407535. It seems like people mostly agree that the attack #15 is basically the same as two Aggregators colluding. I'm not totally convinced myself (I wonder what happens when we try to formalize our security definition and try to prove it), but I think this is fine for now.\r\n\r\nIn any case, it's useful to settle on as few possible trust models as possible.",
              "createdAt": "2023-09-20T23:02:02Z",
              "updatedAt": "2023-09-20T23:02:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNsd",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:05:43Z",
          "updatedAt": "2023-09-20T23:05:43Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "To me this section indicates one must define the trust model of their deployment then choose DP policy. But in reality the trust model may not hold true all the time. It may not be possible for user to choose a trust model and that model's best policy. For e.g. one may not know how many clients are honest. In reality, user probably will choose a DP policy then analyse/explain their DP guarantee under different trust model. Maybe we can word this to something like the choice of DP policy will be affected by the trust model, etc. @cjpatton ",
              "createdAt": "2023-09-20T23:05:43Z",
              "updatedAt": "2023-09-20T23:05:43Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjNu5",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:05:55Z",
          "updatedAt": "2023-09-20T23:05:55Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "That could work. I was thinking of adding a new section to Trust Models, something like this:\r\n\r\n```\r\n## NOP: No-honest-parties\r\n\r\nIf no parties are honest, then the best we can hope for is that the honest\r\nClients' measurements have \"local-DP\". This property is defined the same way as\r\npure- or approximate-DP, except that the bound that we aim to achieve is looser\r\nthan what we can get when at least one Aggregator is honest (OAMC or OA).\r\n```",
              "createdAt": "2023-09-20T23:05:55Z",
              "updatedAt": "2023-09-20T23:05:55Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjPfN",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:09:46Z",
          "updatedAt": "2023-09-20T23:09:46Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "sounds good to me, maybe worth mentioning there is still at least one honest client worthy protecting for.",
              "createdAt": "2023-09-20T23:09:46Z",
              "updatedAt": "2023-09-20T23:09:46Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjV7x",
          "commit": {
            "abbreviatedOid": "fd02abb"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-20T23:36:42Z",
          "updatedAt": "2023-09-20T23:36:58Z",
          "comments": [
            {
              "originalPosition": 38,
              "body": "Great idea! I pruned some of the text here and implemented your suggestion in the itemized list below, PTAL.",
              "createdAt": "2023-09-20T23:36:43Z",
              "updatedAt": "2023-09-20T23:36:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hjt7T",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T01:53:50Z",
          "updatedAt": "2023-09-21T01:53:50Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "I see, although I'd say that in that case privacy is trivially true rather than meaningless (\"for all neighboring databases in \\emptyset, ...\"). \r\n\r\nBut if we want to consider at least one honest Client, then we could make it explicit in the trust model, and say \"all but one Client\" instead of \"most Clients\". The separation between OneAggregator-MostClients and OneAggregator-OneClient seems cleaner than between OneAggregator-MostClients and OneAggregator-FewClients. ",
              "createdAt": "2023-09-21T01:53:50Z",
              "updatedAt": "2023-09-21T01:53:50Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hmCdQ",
          "commit": {
            "abbreviatedOid": "fd02abb"
          },
          "author": "wangshan",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Looks good to me. ",
          "createdAt": "2023-09-21T09:26:13Z",
          "updatedAt": "2023-09-21T09:26:13Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5hqkyU",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T19:21:39Z",
          "updatedAt": "2023-09-21T19:21:39Z",
          "comments": [
            {
              "originalPosition": 72,
              "body": "Done.",
              "createdAt": "2023-09-21T19:21:39Z",
              "updatedAt": "2023-09-21T19:21:39Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hqlk5",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T19:23:49Z",
          "updatedAt": "2023-09-21T19:23:49Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Well, ideally what we want is that that DP bound we can prove depends on the number of honest Clients: if all clients are honest then we get a great bound; if most are malicious, then we still the remaining Clients still get some degree of protection.",
              "createdAt": "2023-09-21T19:23:49Z",
              "updatedAt": "2023-09-21T19:23:49Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hrQ--",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T21:25:30Z",
          "updatedAt": "2023-09-21T21:25:30Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "That makes sense, if we have a bound that degrades gracefully when the number of honest Clients decreases, then OneAggregator-OneClient is simply a special case of this more general bound. But can't we capture this graceful degradation directly in the OA-MC trust model?\r\n\r\nTwo things still bug me a little with the current definition of OA, which is really OneAggregator-FewClients.\r\n- For a simple policy like Aggregator-side noise, the bound does not even depend on the number of honest Clients. So aggregator-side noise is secure under OneAggregator-OneClient. It seems wasteful to request stronger (and possibly more vague) trust assumptions in the form of OneAggregator-FewClients, when we really only need OneAggregator-OneClient.\r\n- Currently, the separation between OA and OA-MC seems a bit blurry: when do we go from \"most Clients are honest\" (OA-MC) to \"most Clients are malicious\" (OA)? Do we have protocols that drastically change when we go from 51% honest to 49% honest? I'd expect this kind of separation (maybe with a 2/3 threshold instead of 1/2) when we do MPC, but I don't think we're considering these protocols for now.\r\n\r\n",
              "createdAt": "2023-09-21T21:25:30Z",
              "updatedAt": "2023-09-21T21:25:30Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hrSta",
          "commit": {
            "abbreviatedOid": "d00a636"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-21T21:32:14Z",
          "updatedAt": "2023-09-21T21:35:57Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "Does OAMC really correspond to the DAP trust model? I think that OA corresponds better, and I think that @simon-friedberger made the same point here: https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/17#discussion_r1329844060. \r\n\r\nIf I understand correctly, DAP only says \"Individual users can reveal their own measurement and compromise their own privacy.\" and doesn't limit the number of Clients who do so.",
              "createdAt": "2023-09-21T21:32:14Z",
              "updatedAt": "2023-09-21T21:35:57Z"
            },
            {
              "originalPosition": 181,
              "body": "```suggestion\r\nAggregator and the Collector are controlled by the attacker. This corresponds to\r\n```",
              "createdAt": "2023-09-21T21:35:52Z",
              "updatedAt": "2023-09-21T21:35:57Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr6pC",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:25:58Z",
          "updatedAt": "2023-09-22T00:25:58Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "\r\n>     * For a simple policy like Aggregator-side noise, the bound does not even depend on the number of honest Clients. So aggregator-side noise is secure under OneAggregator-OneClient. It seems wasteful to request stronger (and possibly more vague) trust assumptions in the form of OneAggregator-FewClients, when we really only need OneAggregator-OneClient.\r\n\r\n\r\nI agree that this distinction doesn't matter. However the distinction between OA-OC and OA-MC is important because, if you're targeting OA-MC, but it turns out that you're in OA-OC, then you may not have any privacy at all, say, if you're doing Client-only noise. On the other hand, if you're targeting OA-OC and use Aggregator-only noise, then you may end up with more utility loss than had you targeted OA-MC.\r\n\r\nI've changed \"OA\" to \"OAOC\" as you suggest.\r\n\r\n>     * Currently, the separation between OA and OA-MC seems a bit blurry: when do we go from \"most Clients are honest\" (OA-MC) to \"most Clients are malicious\" (OA)? Do we have protocols that drastically change when we go from 51% honest to 49% honest? I'd expect this kind of separation (maybe with a 2/3 threshold instead of 1/2) when we do MPC, but I don't think we're considering these protocols for now.\r\n\r\nWe are considering protocols like DPrio, where the privacy degrades as the number of corrupt clients increases. We're also considering pure Client-noise, which should similarly degrade gracefully. I don't expect we'll have schemes where the DP bound suddenly plummets once one more Client starts cheating!\r\n\r\n",
              "createdAt": "2023-09-22T00:25:58Z",
              "updatedAt": "2023-09-22T00:25:58Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr7AP",
          "commit": {
            "abbreviatedOid": "d00a636"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:28:33Z",
          "updatedAt": "2023-09-22T00:28:33Z",
          "comments": [
            {
              "originalPosition": 41,
              "body": "The base protocol is meant to provide private aggregation (the attacker learns nothing but the aggregate result) up to Sybil attacks. That means the protocol only achieves its goals when the attacker does not control any of the inputs to aggregation.\r\n\r\nI think you're right that it's different, mainly due to the word \"most\". I've clarified.",
              "createdAt": "2023-09-22T00:28:33Z",
              "updatedAt": "2023-09-22T00:28:33Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hr7vZ",
          "commit": {
            "abbreviatedOid": "a0be012"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T00:32:31Z",
          "updatedAt": "2023-09-22T00:40:03Z",
          "comments": [
            {
              "originalPosition": 174,
              "body": "```suggestion\r\nbe trusted to execute the protocol correctly (i.e., which parties are not\r\n```\r\n\r\n?",
              "createdAt": "2023-09-22T00:35:32Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            },
            {
              "originalPosition": 108,
              "body": "The rest of the document seems to call the randomized algorithm as `R`, and aggregate result as `S`.",
              "createdAt": "2023-09-22T00:38:08Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            },
            {
              "originalPosition": 108,
              "body": "also one nit thing: I don't know if you intend to use a mixture of \"randomized algorithm\" and \"DP mechanism\", but they seem to mean the same to me.",
              "createdAt": "2023-09-22T00:39:51Z",
              "updatedAt": "2023-09-22T00:40:03Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hsBKc",
          "commit": {
            "abbreviatedOid": "f0e4d1b"
          },
          "author": "cjpatton",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T00:46:46Z",
          "updatedAt": "2023-09-22T00:47:24Z",
          "comments": [
            {
              "originalPosition": 108,
              "body": "* Arg... I meant to use `S` for the algorithm and `r` for the aggregate result. Fixed now (hopefully).\r\n* They're slightly different because the \"DP mechanism\" just generates noise; the \"randomized algorithm\" here aggregates then invokes a DP mechanism.",
              "createdAt": "2023-09-22T00:46:46Z",
              "updatedAt": "2023-09-22T00:47:24Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hwOwU",
          "commit": {
            "abbreviatedOid": "e9d2c9b"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T14:03:44Z",
          "updatedAt": "2023-09-22T14:03:44Z",
          "comments": []
        },
        {
          "id": "PRR_kwDOJ7sZWc5hyMMl",
          "commit": {
            "abbreviatedOid": "bb43d30"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2023-09-22T19:41:04Z",
          "updatedAt": "2023-09-22T19:41:04Z",
          "comments": [
            {
              "originalPosition": 173,
              "body": "Great, thanks @cjpatton!",
              "createdAt": "2023-09-22T19:41:04Z",
              "updatedAt": "2023-09-22T19:41:04Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOJ7sZWc5hyMoA",
          "commit": {
            "abbreviatedOid": "e9d2c9b"
          },
          "author": "tholop",
          "authorAssociation": "CONTRIBUTOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-22T19:42:23Z",
          "updatedAt": "2023-09-22T19:42:23Z",
          "comments": []
        }
      ]
    },
    {
      "number": 19,
      "id": "PR_kwDOJ7sZWc5bKis_",
      "title": "Create skeleton for noisy histograms use case",
      "url": "https://github.com/wangshan/draft-wang-ppm-differential-privacy/pull/19",
      "state": "OPEN",
      "author": "cjpatton",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2023-09-25T20:42:41Z",
      "updatedAt": "2023-09-26T00:12:17Z",
      "baseRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "baseRefName": "main",
      "baseRefOid": "8183bfa36913b04022251b6851af83553ed88013",
      "headRepository": "wangshan/draft-wang-ppm-differential-privacy",
      "headRefName": "cjpatton/noisy-histogram-1",
      "headRefOid": "8bf742cf86e9ef1884b573dc6c2cffbce257ed70",
      "closedAt": null,
      "mergedAt": null,
      "mergedBy": null,
      "mergeCommit": null,
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOJ7sZWc5h8HQg",
          "commit": {
            "abbreviatedOid": "8bf742c"
          },
          "author": "junyechen1996",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2023-09-26T00:10:28Z",
          "updatedAt": "2023-09-26T00:12:17Z",
          "comments": [
            {
              "originalPosition": 43,
              "body": "```suggestion\r\n> TODO Describe a policy that is compatible with Prio3Histogram and that\r\n```",
              "createdAt": "2023-09-26T00:10:28Z",
              "updatedAt": "2023-09-26T00:12:17Z"
            },
            {
              "originalPosition": 16,
              "body": "I don't think readers will be convinced on optimal utility if we don't provide some numbers, but I'm fine with leaving the text as-is, and we will work on it later on.",
              "createdAt": "2023-09-26T00:11:49Z",
              "updatedAt": "2023-09-26T00:12:17Z"
            }
          ]
        }
      ]
    }
  ]
}